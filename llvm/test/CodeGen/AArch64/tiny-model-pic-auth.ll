; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs -mtriple=aarch64 -mattr=+pauth -code-model=tiny -relocation-model=pic < %s | FileCheck %s --check-prefix=CHECK-PIC
; RUN: llc -verify-machineinstrs -mtriple=aarch64 -mattr=+pauth -code-model=tiny -relocation-model=pic -fast-isel < %s | FileCheck %s --check-prefix=CHECK-PIC
; RUN: llc -verify-machineinstrs -mtriple=aarch64 -mattr=+pauth -code-model=tiny -relocation-model=pic -global-isel < %s | FileCheck %s --check-prefix=CHECK-PIC-GLOBISEL

; TODO Note fast-isel tests here will fall back to isel

@src = external local_unnamed_addr global [65536 x i8], align 1
@dst = external global [65536 x i8], align 1
@ptr = external local_unnamed_addr global ptr, align 8

define dso_preemptable void @foo1() {
; CHECK-PIC-LABEL: foo1:
; CHECK-PIC:       // %bb.0: // %entry
; CHECK-PIC-NEXT:    adr x16, :got_auth:src
; CHECK-PIC-NEXT:    ldr x8, [x16]
; CHECK-PIC-NEXT:    autda x8, x16
; CHECK-PIC-NEXT:    adr x16, :got_auth:dst
; CHECK-PIC-NEXT:    ldrb w8, [x8]
; CHECK-PIC-NEXT:    ldr x9, [x16]
; CHECK-PIC-NEXT:    autda x9, x16
; CHECK-PIC-NEXT:    strb w8, [x9]
; CHECK-PIC-NEXT:    ret
;
; CHECK-PIC-GLOBISEL-LABEL: foo1:
; CHECK-PIC-GLOBISEL:       // %bb.0: // %entry
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:src
; CHECK-PIC-GLOBISEL-NEXT:    ldr x8, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autda x8, x16
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:dst
; CHECK-PIC-GLOBISEL-NEXT:    ldrb w8, [x8]
; CHECK-PIC-GLOBISEL-NEXT:    ldr x9, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autda x9, x16
; CHECK-PIC-GLOBISEL-NEXT:    strb w8, [x9]
; CHECK-PIC-GLOBISEL-NEXT:    ret
entry:
  %0 = load i8, ptr @src, align 1
  store i8 %0, ptr @dst, align 1
  ret void
}

define dso_preemptable void @foo2() {
; CHECK-PIC-LABEL: foo2:
; CHECK-PIC:       // %bb.0: // %entry
; CHECK-PIC-NEXT:    adr x16, :got_auth:ptr
; CHECK-PIC-NEXT:    ldr x8, [x16]
; CHECK-PIC-NEXT:    autda x8, x16
; CHECK-PIC-NEXT:    adr x16, :got_auth:dst
; CHECK-PIC-NEXT:    ldr x9, [x16]
; CHECK-PIC-NEXT:    autda x9, x16
; CHECK-PIC-NEXT:    str x9, [x8]
; CHECK-PIC-NEXT:    ret
;
; CHECK-PIC-GLOBISEL-LABEL: foo2:
; CHECK-PIC-GLOBISEL:       // %bb.0: // %entry
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:ptr
; CHECK-PIC-GLOBISEL-NEXT:    ldr x8, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autda x8, x16
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:dst
; CHECK-PIC-GLOBISEL-NEXT:    ldr x9, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autda x9, x16
; CHECK-PIC-GLOBISEL-NEXT:    str x9, [x8]
; CHECK-PIC-GLOBISEL-NEXT:    ret
entry:
  store ptr @dst, ptr @ptr, align 8
  ret void
}

define dso_preemptable void @foo3() {
; FIXME: Needn't adr ptr
;
; CHECK-PIC-LABEL: foo3:
; CHECK-PIC:       // %bb.0: // %entry
; CHECK-PIC-NEXT:    adr x16, :got_auth:src
; CHECK-PIC-NEXT:    ldr x8, [x16]
; CHECK-PIC-NEXT:    autda x8, x16
; CHECK-PIC-NEXT:    adr x16, :got_auth:ptr
; CHECK-PIC-NEXT:    ldrb w8, [x8]
; CHECK-PIC-NEXT:    ldr x9, [x16]
; CHECK-PIC-NEXT:    autda x9, x16
; CHECK-PIC-NEXT:    ldr x9, [x9]
; CHECK-PIC-NEXT:    strb w8, [x9]
; CHECK-PIC-NEXT:    ret
;
; CHECK-PIC-GLOBISEL-LABEL: foo3:
; CHECK-PIC-GLOBISEL:       // %bb.0: // %entry
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:src
; CHECK-PIC-GLOBISEL-NEXT:    ldr x8, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autda x8, x16
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:ptr
; CHECK-PIC-GLOBISEL-NEXT:    ldrb w8, [x8]
; CHECK-PIC-GLOBISEL-NEXT:    ldr x9, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autda x9, x16
; CHECK-PIC-GLOBISEL-NEXT:    ldr x9, [x9]
; CHECK-PIC-GLOBISEL-NEXT:    strb w8, [x9]
; CHECK-PIC-GLOBISEL-NEXT:    ret
entry:
  %0 = load i8, ptr @src, align 1
  %1 = load ptr, ptr @ptr, align 8
  store i8 %0, ptr %1, align 1
  ret void
}

@lsrc = internal global i8 0, align 4
@ldst = internal global i8 0, align 4
@lptr = internal global ptr null, align 8

declare void @func(...)

define dso_preemptable ptr @externfuncaddr() {
; CHECK-PIC-LABEL: externfuncaddr:
; CHECK-PIC:       // %bb.0: // %entry
; CHECK-PIC-NEXT:    adr x16, :got_auth:func
; CHECK-PIC-NEXT:    ldr x0, [x16]
; CHECK-PIC-NEXT:    autia x0, x16
; CHECK-PIC-NEXT:    ret
;
; CHECK-PIC-GLOBISEL-LABEL: externfuncaddr:
; CHECK-PIC-GLOBISEL:       // %bb.0: // %entry
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:func
; CHECK-PIC-GLOBISEL-NEXT:    ldr x0, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autia x0, x16
; CHECK-PIC-GLOBISEL-NEXT:    ret
entry:
      ret ptr @func
}

define dso_preemptable ptr @localfuncaddr() {
; CHECK-PIC-LABEL: localfuncaddr:
; CHECK-PIC:       // %bb.0: // %entry
; CHECK-PIC-NEXT:    adr x16, :got_auth:externfuncaddr
; CHECK-PIC-NEXT:    ldr x0, [x16]
; CHECK-PIC-NEXT:    autia x0, x16
; CHECK-PIC-NEXT:    ret
;
; CHECK-PIC-GLOBISEL-LABEL: localfuncaddr:
; CHECK-PIC-GLOBISEL:       // %bb.0: // %entry
; CHECK-PIC-GLOBISEL-NEXT:    adr x16, :got_auth:externfuncaddr
; CHECK-PIC-GLOBISEL-NEXT:    ldr x0, [x16]
; CHECK-PIC-GLOBISEL-NEXT:    autia x0, x16
; CHECK-PIC-GLOBISEL-NEXT:    ret
entry:
      ret ptr @externfuncaddr
}

!llvm.module.flags = !{!0, !1}
!0 = !{i32 1, !"aarch64-elf-pauthabi-platform", i32 268435458}
!1 = !{i32 1, !"aarch64-elf-pauthabi-version", i32 128}
